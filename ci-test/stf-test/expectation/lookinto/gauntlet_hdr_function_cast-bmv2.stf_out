p4 program:
\n
#include <core.p4>
#include <v1model.p4>

header ethernet_t {
    bit<48> dst_addr;
    bit<48> src_addr;
    bit<16> eth_type;
}


struct Headers {
    ethernet_t eth_hdr1;
    ethernet_t eth_hdr2;
}

struct Meta {
}


ethernet_t do_function_1(inout bit<16> val) {
    if (val == 1) {
        return { 48w1, 48w1, 16w1 };
    } else if (val == 2) {
        return  {2, 2, 2};
    }
    return  {3, 3, 3};
}

ethernet_t do_function_2() {
    return  {1, 1, 1};
}

parser p(packet_in pkt, out Headers hdr, inout Meta m, inout standard_metadata_t sm) {
    state start {
        transition parse_hdrs;
    }
    state parse_hdrs {
        pkt.extract(hdr.eth_hdr1);
        pkt.extract(hdr.eth_hdr2);
        transition accept;
    }
}

control ingress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {

    apply {
        h.eth_hdr1 = do_function_1(h.eth_hdr1.eth_type);
        h.eth_hdr2 = do_function_2();

    }
}

control vrfy(inout Headers h, inout Meta m) {
    apply {
    }
}

control update(inout Headers h, inout Meta m) {
    apply {
    }
}

control egress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {
    apply {
    }
}

control deparser(packet_out pkt, in Headers h) {
    apply {
        pkt.emit(h);
    }
}

V1Switch(p(), vrfy(), ingress(), egress(), update(), deparser()) main;

\n
\n
packet 0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
expect 0 00 00 00 00 00 03 00 00 00 00 00 03 00 03 00 00 00 00 00 01 00 00 00 00 00 01 00 01
packet 0 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00
expect 0 00 00 00 00 00 01 00 00 00 00 00 01 00 01 00 00 00 00 00 01 00 00 00 00 00 01 00 01
packet 0 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00
expect 0 00 00 00 00 00 02 00 00 00 00 00 02 00 02 00 00 00 00 00 01 00 00 00 00 00 01 00 01
\n
\n
************************\n******** petr4 stf result: ********\n************************\n
INCLUDE INCLUDE TEXT(
) IDENT Uncaught exception:
  
  (Failure
   "Error parsing /petr4/ci-test/testdata/p4_16_samples/gauntlet_hdr_function_cast-bmv2.p4 : 4")

Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from P4pp__Eval.Make.preprocess in file "lib/eval.ml", line 205, characters 8-100
Called from Main.Conf.preprocess in file "bin/main.ml", line 26, characters 16-74
Called from Common.Make_parse.parse_file in file "bin/common.ml", line 36, characters 20-56
Called from Common.Make_parse.do_stf in file "bin/common.ml", line 104, characters 10-48
Called from Core_kernel__Command.For_unix.run.(fun) in file "src/command.ml", line 2453, characters 8-238
Called from Base__Exn.handle_uncaught_aux in file "src/exn.ml", line 111, characters 6-10
************************\n******** p4c stf result: ********\n************************\n
Calling target program-options parser
Adding interface pcap0 as port 0 (files)
Obtaining JSON from switch...
Done
Control utility for runtime P4 table manipulation
RuntimeCmd: 
Writing temporary files into  ./tmp8as_pd2t
Executing  /usr/local/bin//p4c-bm2-ss -o ./tmp8as_pd2t/gauntlet_hdr_function_cast-bmv2.json /petr4/ci-test/testdata/p4_16_samples/gauntlet_hdr_function_cast-bmv2.p4
Exit code  0
Running model
Running simple_switch --log-file switch.log --log-flush --use-files 0 --thrift-port 9362 --device-id 272 -i 0@pcap0 .././tmp8as_pd2t/gauntlet_hdr_function_cast-bmv2.json
Running simple_switch_CLI --thrift-port 9362
STF Command: packet 0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
STF Command: expect 0 00 00 00 00 00 03 00 00 00 00 00 03 00 03 00 00 00 00 00 01 00 00 00 00 00 01 00 01
STF Command: packet 0 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00
STF Command: expect 0 00 00 00 00 00 01 00 00 00 00 00 01 00 01 00 00 00 00 00 01 00 00 00 00 00 01 00 01
STF Command: packet 0 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00
STF Command: expect 0 00 00 00 00 00 02 00 00 00 00 00 02 00 02 00 00 00 00 00 01 00 00 00 00 00 01 00 01
simple_switch exit code -15
Execution completed
Comparing outputs
