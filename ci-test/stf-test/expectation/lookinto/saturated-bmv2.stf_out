p4 program:
\n
/*
Copyright 2013-present Barefoot Networks, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

#include <core.p4>
#include <v1model.p4>

typedef bit<8> USat_t;
typedef int<16> Sat_t;

/// Test saturating arithmetic
/// The header specifies the operation:
/// op = 1 - usat_plus, 2 - usat_minus, 3 - sat_plus, 4 - sat_minus
/// oprX_8 - unsigned 8-bit operands, res_8 contains the result
/// oprX_16 - signed 16-bit operands, res_16 contains the result
header hdr {
    bit<8>  op;
    USat_t  opr1_8;
    USat_t  opr2_8;
    USat_t  res_8;
    Sat_t opr1_16;
    Sat_t opr2_16;
    Sat_t res_16;
}

struct Header_t {
    hdr h;
}
struct Meta_t {}

parser p(packet_in b, out Header_t h, inout Meta_t m, inout standard_metadata_t sm) {
    state start {
        b.extract(h.h);
        transition accept;
    }
}

control vrfy(inout Header_t h, inout Meta_t m) { apply {} }
control update(inout Header_t h, inout Meta_t m) { apply {} }
control egress(inout Header_t h, inout Meta_t m, inout standard_metadata_t sm) { apply {} }
control deparser(packet_out b, in Header_t h) { apply { b.emit(h.h); } }

control ingress(inout Header_t h, inout Meta_t m, inout standard_metadata_t standard_meta) {

    action usat_plus() {
        standard_meta.egress_spec = 0; // send to port 0
        h.h.res_8 = h.h.opr1_8 |+| h.h.opr2_8;
    }
    action usat_minus() {
        standard_meta.egress_spec = 0; // send to port 0
        h.h.res_8 = h.h.opr1_8 |-| h.h.opr2_8;
    }
    action sat_plus() {
        standard_meta.egress_spec = 0; // send to port 0
        h.h.res_16 = h.h.opr1_16 |+| h.h.opr2_16;
    }
    action sat_minus() {
        standard_meta.egress_spec = 0; // send to port 0
        h.h.res_16 = h.h.opr1_16 |-| h.h.opr2_16;
    }

    action drop() { mark_to_drop(standard_meta); }

    USat_t ru;
    Sat_t r;

    table t {

  	key = {
            h.h.op : exact;
        }

	actions = {
            usat_plus;
            usat_minus;
            sat_plus;
            sat_minus;
            drop;
        }

	default_action = drop;

        const entries = {
            0x01 : usat_plus();
            0x02 : usat_minus();
            0x03 : sat_plus();
            0x04 : sat_minus();
        }
    }

    apply {
        t.apply();
    }
}


V1Switch(p(), vrfy(), ingress(), egress(), update(), deparser()) main;
\n
\n
# Test saturating arithmetic

# unsigned: 1 + 1 = 2
expect 0 01 01 01 02 0000 0000 0000
packet 0 01 01 01 00 0000 0000 0000

# unsigned: 2 - 1 = 1
expect 0 02 02 01 01 0000 0000 0000
packet 0 02 02 01 00 0000 0000 0000

# unsigned: 254 + 2 = 255
expect 0 01 fe 02 ff 0000 0000 0000
packet 0 01 fe 02 00 0000 0000 0000

# # unsigned: 8 - 10 = 0
expect 0 02 08 0a 00 0000 0000 0000
packet 0 02 08 0a aa 0000 0000 0000

# signed: 10 + 10 = 20
expect 0 03 00 00 00 000a 000a 0014
packet 0 03 00 00 00 000a 000a 0000

# signed: 32766 + 10 = 32767
expect 0 03 00 00 00 7ffe 000a 7fff
packet 0 03 00 00 00 7ffe 000a 0000

# signed: 10 - 20 = -10
expect 0 04 00 00 00 000a 0014 fff6
packet 0 04 00 00 00 000a 0014 0000

# signed: -32766 - 10 = -32768
expect 0 04 00 00 00 8002 000a 8000
packet 0 04 00 00 00 8002 000a 0000

# signed: 1 + (-10) = -9
expect 0 03 00 00 00 0001 fff6 fff7
packet 0 03 00 00 00 0001 fff6 0000

# signed: 1 - (-10) = 11
expect 0 04 00 00 00 0001 fff6 000b
packet 0 04 00 00 00 0001 fff6 0000
\n
\n
************************\n******** petr4 stf result: ********\n************************\n
TEXT( ) TEXT(
) TEXT(#) IDENT Uncaught exception:
  
  (Failure
   "Error parsing /petr4/ci-test/testdata/p4_16_samples/saturated-bmv2.p4 : 2")

Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from P4pp__Eval.Make.preprocess in file "lib/eval.ml", line 205, characters 8-100
Called from Main.Conf.preprocess in file "bin/main.ml", line 26, characters 16-74
Called from Common.Make_parse.parse_file in file "bin/common.ml", line 36, characters 20-56
Called from Common.Make_parse.do_stf in file "bin/common.ml", line 104, characters 10-48
Called from Core_kernel__Command.For_unix.run.(fun) in file "src/command.ml", line 2453, characters 8-238
Called from Base__Exn.handle_uncaught_aux in file "src/exn.ml", line 111, characters 6-10
************************\n******** p4c stf result: ********\n************************\n
Calling target program-options parser
Adding interface pcap0 as port 0 (files)
Obtaining JSON from switch...
Done
Control utility for runtime P4 table manipulation
RuntimeCmd: 
Writing temporary files into  ./tmp9kwl1bl7
Executing  /usr/local/bin//p4c-bm2-ss -o ./tmp9kwl1bl7/saturated-bmv2.json /petr4/ci-test/testdata/p4_16_samples/saturated-bmv2.p4
Exit code  0
Running model
Running simple_switch --log-file switch.log --log-flush --use-files 0 --thrift-port 9491 --device-id 401 -i 0@pcap0 .././tmp9kwl1bl7/saturated-bmv2.json
Running simple_switch_CLI --thrift-port 9491
STF Command: expect 0 01 01 01 02 0000 0000 0000
STF Command: packet 0 01 01 01 00 0000 0000 0000
STF Command: expect 0 02 02 01 01 0000 0000 0000
STF Command: packet 0 02 02 01 00 0000 0000 0000
STF Command: expect 0 01 fe 02 ff 0000 0000 0000
STF Command: packet 0 01 fe 02 00 0000 0000 0000
STF Command: expect 0 02 08 0a 00 0000 0000 0000
STF Command: packet 0 02 08 0a aa 0000 0000 0000
STF Command: expect 0 03 00 00 00 000a 000a 0014
STF Command: packet 0 03 00 00 00 000a 000a 0000
STF Command: expect 0 03 00 00 00 7ffe 000a 7fff
STF Command: packet 0 03 00 00 00 7ffe 000a 0000
STF Command: expect 0 04 00 00 00 000a 0014 fff6
STF Command: packet 0 04 00 00 00 000a 0014 0000
STF Command: expect 0 04 00 00 00 8002 000a 8000
STF Command: packet 0 04 00 00 00 8002 000a 0000
STF Command: expect 0 03 00 00 00 0001 fff6 fff7
STF Command: packet 0 03 00 00 00 0001 fff6 0000
STF Command: expect 0 04 00 00 00 0001 fff6 000b
STF Command: packet 0 04 00 00 00 0001 fff6 0000
simple_switch exit code -15
Execution completed
Comparing outputs
