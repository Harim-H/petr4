(coq.extraction
 (prelude Extract)
 (extracted_modules
	AList AListUtil Datatypes List
	P4Int P4String Syntax P4Field
        Extract
        Packet
	Typed Utils SimplExpr
        Maps Monad State
	SyntaxUtil GenLoc
	ConstValue
        Interpreter
        Target
        V1ModelTarget
        CoqLib
        Compare_dec
        Hexadecimal
        BinNat Datatypes GCL Inline List Result ToGCL ToP4cub
    AST EquivDec
    ToP4cub ToGCL GCL Inline Statementize VarNameGen
    HoistNameless InferMemberTypes Substitution InlineTypeDecl
    TableInstr V1model
    Auxilary Envn Result P4Arith
    EquivUtil StringUtil AListUtil ListUtil FunUtil
    Bool String Nat
    BinNums BinInt Zpower
    Specif Basics PeanoNat
    BinPosDef BinPos BinNat BinNatDef
    Zcomplements
    Ops
    Value
    sublist
    Sumbool
    Semantics
    ZArith_dec
    Target
    ValueUtil
    ssrbool
    Classes
    Ascii BinIntDef Monad Option)
 (libraries zarith bignum)
 (theories Poulet4))
(library 
  (preprocess (action (run ./extraction/dummy.sh %{input-file})))
  (name poulet4)
  (public_name poulet4)
  (libraries bignum zarith)
  (flags (:standard -w -39 -w -33 -w -20 -w -27)))
